"use strict";var banner=document.querySelector("#banner");banner&&(document.addEventListener("DOMContentLoaded",function(){banner.classList.add("on")}),window.innerWidth<1024?tns({container:banner.querySelector(".mobile"),items:1,mouseDrag:!0,nav:!0,controls:!1,loop:!0,slideBy:1,center:!0,edgePadding:0,speed:850,autoplay:!0,autoplayButtonOutput:!1}):tns({container:banner.querySelector(".hd"),items:1,mouseDrag:!0,nav:!0,controls:!1,loop:!0,slideBy:1,center:!0,edgePadding:0,speed:850,autoplay:!0,autoplayButtonOutput:!1}));
"use strict";var contentMobile,bike=document.getElementById("bike");bike&&(function(){for(var i=bike.querySelectorAll(".tab>input[type=checkbox]"),e=0;e<i.length;e++){var t=i[e];t.checked=!1,$(t).closest(".content").slideUp(600)}i[0].checked=!0,window.innerWidth<=1024&&$(document).find("#bike .bikeMobile .content>div").eq(0).slideDown(600),$(i[0]).closest(".content-mobile").slideDown(600);for(var n=0;n<i.length;n++)!function(e){var o=i[e];$(o).unbind("change").change(function(e){e.stopPropagation(),e.preventDefault(),e.stopImmediatePropagation();for(var e=!!o.checked,t=0;t<i.length;t++){var n=i[t];n.checked=!1,$(n).closest(".content-mobile").slideUp(600)}o.checked=e,o.checked?$(o).closest(".content-mobile").slideDown(600):$(o).closest(".content-mobile").slideUp(600),window.innerWidth<=1024&&(e=$(o).attr("id"),$(o).closest(".bikeMobile").find(".content>div:not(#"+e+")").slideUp(600),$(o).closest(".bikeMobile").find(".content>div#"+e).slideDown(600))})}(n)}(),function(){for(var i=bike.querySelectorAll(".tabDesk>input[type=checkbox]"),e=0;e<i.length;e++)!function(e){var o=i[e];$(o).unbind("change").change(function(e){e.stopPropagation(),e.preventDefault(),e.stopImmediatePropagation();for(var e=!!o.checked,t=0;t<i.length;t++){var n=i[t];n.checked=!1,$(n).parent().find(".content-desktop").animate({opacity:0,display:"none"},700)}o.checked=e,o.checked?$(o).parent().find(".content-desktop").animate({opacity:1},700):$(o).parent().find(".content-desktop").animate({opacity:0,display:"none"},700);e=$(o).attr("id");$(o).closest(".bikeDesktop").find(".content>div:not(#"+e+")").animate({opacity:0,display:"none"},700),$(o).closest(".bikeDesktop").find(".content>div#"+e).animate({opacity:1},700)})}(e)}(),window.innerWidth<1024&&(contentMobile=bike.querySelector(".content-mobile-tns"),tns({container:contentMobile,center:!1,loop:!0,rewind:!0,nav:!1,autoWidth:!0,items:1,slideBy:1,speed:600,mouseDrag:!0,autoplay:!0,autoplayHoverPause:!0,autoplayTimeout:3500,controls:!1,autoplayButtonOutput:!1})),bike.contains(bike.querySelector("[data-modal=ficha-tecnica]")))&&!function(){var e=bike.querySelectorAll("[data-btnModal=ficha-tecnica]"),t=bike.querySelector("[data-modal=ficha-tecnica]"),n=t.querySelector(".close-modal");e.forEach(function(e){e.addEventListener("click",function(e){e.preventDefault(),t.classList.add("active")})}),n.addEventListener("click",function(e){t.classList.remove("active")})}();
"use strict";var boxes=document.querySelectorAll(".box-splits");if(boxes){for(var _loop=function(e){var o=boxes[e].offsetTop;function t(){(document.body.scrollTop||document.documentElement.scrollTop)+window.innerHeight>o&&(boxes[e].classList.add("on"),window.removeEventListener("scroll",t))}window.addEventListener("scroll",t),window.addEventListener("DOMContentLoaded",t)},i=0;i<boxes.length;i++)_loop(i);!function(){var n=document.querySelector(".modal-video-box-split");if(n)for(var i=void 0,d=!1,e=0;e<boxes.length;e++)!function(e){var o=boxes[e].querySelector("a.openVideo"),e=document.querySelector(".modal-video-box-split"),t=getYouTubeID(n.dataset.video);o&&(o.addEventListener("click",function e(){i=new YT.Player(n.querySelector(".video-content"),{height:"520",width:"700",videoId:t,playerVars:{rel:0},events:{onReady:function(){d=!0,i.playVideo()}}}),o.removeEventListener("click",e)}),o.addEventListener("click",function(e){e.preventDefault(),n.classList.add("opened"),d&&i.playVideo()}),e.addEventListener("click",function(e){e.preventDefault(),i.stopVideo(),n.classList.remove("opened")}))}(e)}()}
"use strict";var headerBlock=document.getElementById("header");headerBlock&&headerBlock.classList.contains("header-block")&&(function(){var d=headerBlock.querySelector(".menu"),e=d.querySelectorAll("a:not(:last-child)"),n=d.querySelector("hr"),o=Math.round(n.offsetWidth/4),r=[];function c(e){var t=e.offsetWidth,e=e.offsetLeft,e=Math.round(e+t/2-13);n.style.left=e-o+"px"}function t(){for(var e=document.documentElement.scrollTop,t=(headerBlock.offsetHeight,0);t<r.length;t++){var n=document.querySelector(r[t]);if(n)if(n.offsetTop<e+200&&1024<window.innerWidth){n=d.querySelector('a[href="'+r[t]+'"]');c(n);for(var o=0;o<d.querySelectorAll("a").length;o++)d.querySelectorAll("a")[o].classList.remove("active");n.classList.add("active")}}}for(var a=0;a<e.length;a++)r.push(e[a].hash),e[a].addEventListener("mouseover",function(){c(this)}),e[a].addEventListener("mouseout",function(){t()});r=r.filter(function(e){return""!=e}),window.addEventListener("scroll",t),document.addEventListener("DOMContentLoaded",t)}(),function(){var e=document.getElementById("burguer-menu");e.addEventListener("change",function(){1==e.checked?document.querySelector("body").classList.add("hidden"):document.querySelector("body").classList.remove("hidden")})}(),function(){var e=document.querySelectorAll("main>section input.card"),t=document.querySelector(".alterar-cidade");0<e.length&&e.forEach(function(e){e.addEventListener("change",function(){1==e.checked&&t.classList.remove("hidden-xs")})}),t.addEventListener("click",function(){t.classList.add("hidden-xs")})}(),function(){var e=document.getElementById("header");function t(){30<document.documentElement.scrollTop?e.classList.add("on"):e.classList.remove("on")}window.addEventListener("scroll",t),window.addEventListener("DOMContentLoaded",t)}());
"use strict";var informacoes2colunas=document.getElementById("box-informacoes");informacoes2colunas&&(function(){function e(){(document.body.scrollTop||document.documentElement.scrollTop)+window.innerHeight>informacoes2colunas.offsetTop&&(informacoes2colunas.classList.add("on"),window.removeEventListener("scroll",e))}window.addEventListener("scroll",e),window.addEventListener("DOMContentLoaded",e)}(),function(){for(var l=informacoes2colunas.querySelectorAll(".tab>input[type=checkbox]"),e=(l[0].checked=!0,(window.innerWidth<=1024?l[0].parentNode.querySelector(".content"):informacoes2colunas.querySelectorAll(".infos-content .content")[0]).classList.add("on"),0);e<l.length;e++)!function(e){var i=l[e],r=(l[0].parentNode,informacoes2colunas.querySelector(".infos-content")),s=i.getAttribute("id");i.addEventListener("change",function(e){e.stopPropagation(),e.preventDefault(),e.stopImmediatePropagation();for(var e=!!i.checked,n=0;n<l.length;n++){var o=l[n],o=(o.checked=!1,o.getAttribute("id"),o.parentNode);(window.innerWidth<=1024?o.children[2]:r.children[n]).classList.remove("on")}if(i.checked=e,window.innerWidth<=1024)i.checked&&i.nextElementSibling.nextElementSibling.classList.add("on");else if(i.checked)for(var t=r.querySelectorAll(".content"),c=0;c<t.length;c++)t[c].classList.contains(s)&&t[c].classList.add("on")})}(e)}(),function(){var n=informacoes2colunas.querySelector("div.regulamentoModal"),e=informacoes2colunas.querySelectorAll('a[href="#regulamentoModal"]'),o=n.querySelector(".close-regulamento");if(0<e.length){for(var t=0;t<e.length;t++)e[t].addEventListener("click",function(e){e.preventDefault(),n.classList.add("on"),setTimeout(function(){document.querySelector("body").classList.add("hidden")},800)});o.addEventListener("click",function(){n.classList.remove("on"),setTimeout(function(){document.querySelector("body").classList.remove("hidden")},800)})}}());
"use strict";var enterkitsCaroussel,kitsCaroussel=document.getElementById("kits");kitsCaroussel&&(enterkitsCaroussel=function e(){(document.body.scrollTop||document.documentElement.scrollTop)+this.innerHeight>kitsCaroussel.offsetTop&&(kitsCaroussel.classList.add("on"),window.removeEventListener("scroll",e))},window.addEventListener("load",enterkitsCaroussel),window.addEventListener("scroll",enterkitsCaroussel),function(){var e,t,o=kitsCaroussel.querySelector(".kits");4<o.children.length||window.innerWidth<1024?(e=document.querySelector("#prevKit"),t=document.querySelector("#nextKit"),tns({container:o,items:1,mouseDrag:!0,nav:!1,loop:!1,slideBy:1,prevButton:e,nextButton:t,gutter:10,fixedWidth:300,edgePadding:40,speed:600,responsive:{1024:{items:2,slideBy:"page",fixedWidth:window.innerWidth/2-1,gutter:5},1600:{gutter:50}}})):o.parentNode.classList.add("no-slider")}(),function(){for(var o=kitsCaroussel.querySelectorAll("input[type=checkbox]"),e=0;e<o.length;e++)!function(t){o[t].addEventListener("change",function(){var e;1024<window.innerWidth?(e=document.getElementById("header").offsetHeight,$(document.documentElement).stop().delay(0).animate({scrollTop:kitsCaroussel.offsetTop-e},1e3,"swing")):o[t].checked?(kitsCaroussel.parentNode.querySelector(".modal-tamanhos").style.zIndex=50,document.querySelector("body").classList.add("hidden"),document.querySelector("html").classList.add("hidden")):(kitsCaroussel.parentNode.querySelector(".modal-tamanhos").style.zIndex=10,document.querySelector("body").classList.remove("hidden"),document.querySelector("html").classList.remove("hidden"))})}(e)}(),function(){for(var e=document.querySelectorAll("div.kit"),t=document.querySelector("#idEvento").value,d=document.querySelector("input.valorClubeO2").value,c=(new Date).getTime(),u=c+36e4,v=localStorage.getItem("tempo_"+t),o=0;o<e.length;o++)!function(o,r,n){var s=n.querySelector(".valorDe span"),a=n.querySelector(".valor strong"),l=n.querySelector(".centavos");{var i,e,t;a.textContent||s.textContent||(v<=c?((i=new XMLHttpRequest).open("GET","https://webservices.ativo.com/br/evento/valores-kit/"+o+"/"+r,!0),i.send(),i.onreadystatechange=function(){var e,t;4==i.readyState&&200==i.status&&(e=i.responseText,(e=JSON.parse(e).dados[0]).valor?(t=[],n.classList.contains("clubeO2")?(s.parentNode.innerHTML="APENAS",e.valor=(parseFloat(e.valor.replace(",","."))+parseFloat(d.replace(",","."))).toFixed(2).replace(".",",")):e.valor==e.valor_de?s.parentNode.innerHTML="APENAS":s.innerHTML=e.valor_de,t=e.valor.split(","),n.classList.contains("gratis")||(a.innerHTML=t[0],l.innerHTML=t[1]),localStorage.setItem("de_"+r+"_id_evento_"+o,e.valor_de),localStorage.setItem("valor_atual_"+r+"_id_evento_"+o,e.valor),localStorage.setItem("preco_"+r+"_id_evento_"+o,t[0]),localStorage.setItem("preco_virgula_"+r+"_id_evento_"+o,t[1]),localStorage.setItem("tempo_"+o,u)):n.classList.add("esgotado"))}):(n.classList.contains("gratis")||(s.innerHTML=localStorage.getItem("de_"+r+"_id_evento_"+o)),e=localStorage.getItem("de_"+r+"_id_evento_"+o),t=localStorage.getItem("valor_atual_"+r+"_id_evento_"+o),e==t&&null!=t&&(s.parentNode.innerHTML="APENAS"),"0,00"==e&&n.classList.add("gratis"),n.classList.contains("clubeO2")&&(s.parentNode.innerHTML="APENAS"),n.classList.contains("gratis")||(a.innerHTML=localStorage.getItem("preco_"+r+"_id_evento_"+o),l.innerHTML=localStorage.getItem("preco_virgula_"+r+"_id_evento_"+o))))}}(t,e[o].querySelector(".idCategoria").value,e[o])}());
"use strict";var modalGrupos=document.querySelector(".modal-grupos");modalGrupos&&($(modalGrupos).closest("section").attr("id","modal-grupos"),document.addEventListener("DOMContentLoaded",function(){var e=document.getElementById("header");modalGrupos.querySelector(".close-grupos").addEventListener("click",function(e){e.preventDefault(),modalGrupos.classList.remove("on"),setTimeout(function(){document.querySelector("body").classList.remove("hidden")},300)}),e.addEventListener("click",function(e){for(var o=e.target;o&&"A"!==o.tagName;)if(!(o=o.parentNode))return;-1<o.href.indexOf("#grupos")&&(modalGrupos.classList.add("on"),document.querySelector("body").classList.add("hidden"))})}));
"use strict";var modalInforme=document.getElementById("modal-informe");modalInforme&&!function(){var e=modalInforme.querySelector(".close");setTimeout(function(){modalInforme.classList.add("on"),document.querySelector("body").classList.add("hidden")},1e3),e.addEventListener("click",function(e){e.preventDefault(),modalInforme.classList.remove("on"),setTimeout(function(){document.querySelector("body").classList.remove("hidden")},600)})}();
"use strict";var modalidades=document.querySelector("#modalidades");modalidades&&window.innerWidth<1024&&tns({container:modalidades.querySelector(".container"),center:!0,loop:!1,nav:!1,fixedWidth:250,gutter:100,speed:600,controlsText:["<span></span>","<span></span>"]});
"use strict";var newsletter=document.getElementById("newsletter");newsletter&&(function(){var e=new XMLHttpRequest;e.open("GET","http://geoip.ativo.com/",!0),e.onload=function(){var e,t,o;200<=this.status&&this.status<400&&(e=(o=JSON.parse(this.response)).cidade,t=o.estado_code,o=o.pais_code,document.getElementById("cidadeNewsletter").value=e,document.getElementById("estadoNewsletter").value=t,document.getElementById("paisCadastro").value=o)},e.send()}(),function(){var l=newsletter.querySelector("form");l.addEventListener("submit",function(e){e.preventDefault();var e=new XMLHttpRequest,t=l.querySelector("#emailNewsletter").value,o=l.querySelector("#origemNewsletter").value,r=l.querySelector("#origemURL").value,s=l.querySelector("#siteOrigemNewsletter").value,a=l.querySelector("#urlNewsletter").value,i=l.querySelector("#optinNewsletter").value,a=(e.open("POST",a),e.onreadystatechange=function(){200===this.status?(l.classList.add("on"),setTimeout(function(){l.classList.remove("on")},5e3),l.querySelector("#nomeNewsletter").value="",l.querySelector("#emailNewsletter").value=""):(l.classList.add("off"),setTimeout(function(){l.classList.remove("off")},5e3))},{usuario_nome:"Esporte Social",usuario_email:t,origem_cidade:"origemCidade",origem_estado:"origemEstado",origem_pais:"origemPais",origem_pais_cadastro:"origemPaisCadastro",origem_descricao:o,origem_url:r,origem_id:s,news_optin:i});e.send(JSON.stringify(a))})}());
"use strict";
"use strict";var widget=document.querySelectorAll("div.logo-container.rodape-logos-inner");0<widget.length&&widget&&(function(e,o){for(;e.nodeName!=o.toUpperCase();)if(!(e=e.parentNode))return null;return e}(widget[0],"section").id="rodape-logos");
"use strict";var skate=document.querySelector("#skate");skate&&!function(){var e;document.querySelector("input#openSkateRecordDesk")&&(e=document.querySelector("input#openSkateRecordDesk")).addEventListener("change",function(){1==e.checked?document.querySelector("body").classList.add("hidden"):document.querySelector("body").classList.remove("hidden")})}();
"use strict";var sliderInfos=document.querySelector("#slider-infos");sliderInfos&&(window.innerWidth<1024&&tns({container:sliderInfos.querySelector(".container"),center:!0,loop:!1,nav:!1,fixedWidth:413,items:1,slideBy:1,speed:600,controlsText:["<span></span>","<span></span>"]}),window.addEventListener("load",function(){sliderInfos.classList.add("on")}));
"use strict";var tapume=document.querySelector("main#tapume");tapume&&window.addEventListener("load",function(){tapume.classList.add("on")});
"use strict";var openVideo,videoId,playerVideo,moduloVideo=document.getElementById("video");moduloVideo&&(openVideo=moduloVideo.querySelector("a.open"),videoId=getYouTubeID(moduloVideo.dataset.url),playerVideo=void 0,function(){function e(){(document.body.scrollTop||document.documentElement.scrollTop)+window.innerHeight>moduloVideo.offsetTop&&(moduloVideo.classList.add("on"),window.removeEventListener("scroll",e))}window.addEventListener("scroll",e),window.addEventListener("DOMContentLoaded",e)}(),openVideo.addEventListener("click",function(e){e.preventDefault(),openVideo.classList.add("opened"),playerVideo=new YT.Player("iframeModuloVideo",{height:"520",width:"1360",videoId:videoId,playerVars:{rel:0},events:{onReady:function(){moduloVideo.querySelector(".iframe").classList.add("play"),playerVideo.playVideo()}}})}),function(){var d=moduloVideo.querySelector("#abreCardVideo");window.innerWidth<1024&&d.addEventListener("change",function(){function e(){o.checked||playerVideo.pauseVideo()}var o=document.getElementById("close-header");d.checked?(openVideo.click(),o.addEventListener("change",e)):o.removeEventListener("change",e)})}());
"use strict";!function(){for(var n=document.querySelectorAll("main>section input.card"),e=0;e<n.length;e++)!function(e){var s=n[e];s.addEventListener("change",function(e){for(var t,c=!!s.checked,d=0;d<n.length;d++)n[d].checked=!1;s.checked=c,s.checked?(document.querySelector("body").classList.add("hidden"),(t=document.getElementById("close-header")).classList.add("card"),t.checked=!0,t.addEventListener("change",function(){for(var e=0;e<n.length;e++)n[e].checked=!1;document.querySelector("body").classList.remove("hidden"),t.classList.remove("card"),document.querySelector("input#openSkateRecordMobile")&&(document.querySelector("input#openSkateRecordMobile").checked=!1)})):document.querySelector("body").classList.remove("hidden")})}(e)}();for(var imgURL,data,xhr,svgs_class=document.querySelectorAll("img[data-svg]"),_loop2=function(e){var d=svgs_class[e],s=document.createAttribute("class");s.value=d.getAttribute("class"),imgURL=d.getAttribute("data-svg"),data=null,(xhr=new XMLHttpRequest).withCredentials=!1,xhr.addEventListener("readystatechange",function(){if(4===this.readyState){var e=this.responseText,t=(parent=d.parentNode,document.createElement("div"));t.innerHTML=e;for(var c=0;c<t.childNodes.length;c++)"svg"==t.childNodes[c].tagName&&(e=t.childNodes[c]);void 0!==s&&(e.setAttributeNode(s),e.classList.add("on")),parent.replaceChild(e,d)}}),xhr.open("GET",imgURL),xhr.send(data)},svgs_i=0;svgs_i<svgs_class.length;svgs_i++)_loop2(svgs_i);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
